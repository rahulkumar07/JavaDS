import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

/*This class also calculates the complexity of the InsertionSort which is at worst case equals to n(n-1)/2, best at n
*/
public class InsertionSort{
    public static void main(String[] s) throws IOException {
        BufferedReader br =
            new BufferedReader(new InputStreamReader(System.in));
        String vals = br.readLine();
        char a[] = vals.toCharArray();
        int ab[] = new int[a.length];
        for (int i = 0; i < a.length; i++) {
            ab[i] = a[i];
        }
        selectionSort(ab);

    }

       private static void insertionSort(int[] ab) {
        int count = 0;
        for (int i = 0; i < ab.length; i++) {
            int j = i;
            while ((j > 0) && (ab[j] < ab[j - 1])) {
                int temp = ab[j];
                ab[j] = ab[j-1];
                ab[j-1] = temp;
                j = j - 1;
                count++;
                for (int k = 0; k < ab.length; k++) {
                    System.out.print((char)ab[k]);
                }
                System.out.println("" + count);
            }
            System.out.println("     ");
           
        }


    }


    }
    
    }
